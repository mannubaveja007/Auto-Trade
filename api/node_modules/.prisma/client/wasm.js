
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.VendorScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  address: 'address',
  categories: 'categories',
  rating: 'rating',
  verified: 'verified',
  minOrderValue: 'minOrderValue',
  paymentTerms: 'paymentTerms',
  createdAt: 'createdAt'
};

exports.Prisma.BuyerScalarFieldEnum = {
  id: 'id',
  companyName: 'companyName',
  email: 'email',
  phone: 'phone',
  address: 'address',
  industry: 'industry',
  creditRating: 'creditRating',
  paymentHistory: 'paymentHistory',
  createdAt: 'createdAt'
};

exports.Prisma.ProcurementRequestScalarFieldEnum = {
  id: 'id',
  buyerId: 'buyerId',
  productName: 'productName',
  category: 'category',
  quantity: 'quantity',
  unit: 'unit',
  specifications: 'specifications',
  deliveryDate: 'deliveryDate',
  deliveryAddress: 'deliveryAddress',
  maxBudget: 'maxBudget',
  status: 'status',
  urgency: 'urgency',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QuoteScalarFieldEnum = {
  id: 'id',
  requestId: 'requestId',
  vendorId: 'vendorId',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice',
  deliveryDate: 'deliveryDate',
  paymentTerms: 'paymentTerms',
  notes: 'notes',
  status: 'status',
  validUntil: 'validUntil',
  createdAt: 'createdAt'
};

exports.Prisma.NegotiationMessageScalarFieldEnum = {
  id: 'id',
  quoteId: 'quoteId',
  sender: 'sender',
  message: 'message',
  proposedChanges: 'proposedChanges',
  timestamp: 'timestamp'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  requestId: 'requestId',
  quoteId: 'quoteId',
  buyerId: 'buyerId',
  vendorId: 'vendorId',
  finalPrice: 'finalPrice',
  deliveryDate: 'deliveryDate',
  paymentTerms: 'paymentTerms',
  status: 'status',
  orderDate: 'orderDate',
  trackingInfo: 'trackingInfo'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  Vendor: 'Vendor',
  Buyer: 'Buyer',
  ProcurementRequest: 'ProcurementRequest',
  Quote: 'Quote',
  NegotiationMessage: 'NegotiationMessage',
  Order: 'Order'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/mannubaveja/temp/Yellow_Network/Project/autotrade-mvp/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/mannubaveja/temp/Yellow_Network/Project/autotrade-mvp/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Vendor {\n  id            String   @id @default(cuid())\n  name          String\n  email         String   @unique\n  phone         String?\n  address       String?\n  categories    String[]\n  rating        Float    @default(0)\n  verified      Boolean  @default(false)\n  minOrderValue Float    @default(0)\n  paymentTerms  String   @default(\"NET 30\")\n  createdAt     DateTime @default(now())\n\n  quotes Quote[]\n  orders Order[]\n\n  @@map(\"vendors\")\n}\n\nmodel Buyer {\n  id             String   @id @default(cuid())\n  companyName    String\n  email          String   @unique\n  phone          String?\n  address        String?\n  industry       String?\n  creditRating   String   @default(\"B\")\n  paymentHistory Json?\n  createdAt      DateTime @default(now())\n\n  procurementRequests ProcurementRequest[]\n  orders              Order[]\n\n  @@map(\"buyers\")\n}\n\nmodel ProcurementRequest {\n  id              String   @id @default(cuid())\n  buyerId         String\n  productName     String\n  category        String\n  quantity        Float\n  unit            String\n  specifications  Json?\n  deliveryDate    DateTime\n  deliveryAddress String?\n  maxBudget       Float?\n  status          String   @default(\"open\") // open, negotiating, awarded, completed, cancelled\n  urgency         String   @default(\"medium\") // low, medium, high\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n\n  buyer  Buyer   @relation(fields: [buyerId], references: [id])\n  quotes Quote[]\n  orders Order[]\n\n  @@map(\"procurement_requests\")\n}\n\nmodel Quote {\n  id           String    @id @default(cuid())\n  requestId    String\n  vendorId     String\n  unitPrice    Float\n  totalPrice   Float\n  deliveryDate DateTime\n  paymentTerms String\n  notes        String?\n  status       String    @default(\"pending\") // pending, accepted, rejected, countered\n  validUntil   DateTime?\n  createdAt    DateTime  @default(now())\n\n  request      ProcurementRequest   @relation(fields: [requestId], references: [id])\n  vendor       Vendor               @relation(fields: [vendorId], references: [id])\n  negotiations NegotiationMessage[]\n  orders       Order[]\n\n  @@map(\"quotes\")\n}\n\nmodel NegotiationMessage {\n  id              String   @id @default(cuid())\n  quoteId         String\n  sender          String // 'buyer', 'vendor', 'ai-agent'\n  message         String\n  proposedChanges Json?\n  timestamp       DateTime @default(now())\n\n  quote Quote @relation(fields: [quoteId], references: [id])\n\n  @@map(\"negotiation_messages\")\n}\n\nmodel Order {\n  id           String   @id @default(cuid())\n  requestId    String\n  quoteId      String\n  buyerId      String\n  vendorId     String\n  finalPrice   Float\n  deliveryDate DateTime\n  paymentTerms String\n  status       String   @default(\"confirmed\") // confirmed, shipped, delivered, paid, completed\n  orderDate    DateTime @default(now())\n  trackingInfo Json?\n\n  request ProcurementRequest @relation(fields: [requestId], references: [id])\n  quote   Quote              @relation(fields: [quoteId], references: [id])\n  buyer   Buyer              @relation(fields: [buyerId], references: [id])\n  vendor  Vendor             @relation(fields: [vendorId], references: [id])\n\n  @@map(\"orders\")\n}\n",
  "inlineSchemaHash": "7aecab9110c2fe7e73a46e359c4eddfe2a81cdf46a679e21f4be2a5473cc0702",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Vendor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categories\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"minOrderValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"paymentTerms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"quotes\",\"kind\":\"object\",\"type\":\"Quote\",\"relationName\":\"QuoteToVendor\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToVendor\"}],\"dbName\":\"vendors\"},\"Buyer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditRating\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentHistory\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"procurementRequests\",\"kind\":\"object\",\"type\":\"ProcurementRequest\",\"relationName\":\"BuyerToProcurementRequest\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"BuyerToOrder\"}],\"dbName\":\"buyers\"},\"ProcurementRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specifications\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"deliveryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveryAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxBudget\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"urgency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"buyer\",\"kind\":\"object\",\"type\":\"Buyer\",\"relationName\":\"BuyerToProcurementRequest\"},{\"name\":\"quotes\",\"kind\":\"object\",\"type\":\"Quote\",\"relationName\":\"ProcurementRequestToQuote\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToProcurementRequest\"}],\"dbName\":\"procurement_requests\"},\"Quote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deliveryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentTerms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"validUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"request\",\"kind\":\"object\",\"type\":\"ProcurementRequest\",\"relationName\":\"ProcurementRequestToQuote\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"QuoteToVendor\"},{\"name\":\"negotiations\",\"kind\":\"object\",\"type\":\"NegotiationMessage\",\"relationName\":\"NegotiationMessageToQuote\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToQuote\"}],\"dbName\":\"quotes\"},\"NegotiationMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quoteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proposedChanges\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"quote\",\"kind\":\"object\",\"type\":\"Quote\",\"relationName\":\"NegotiationMessageToQuote\"}],\"dbName\":\"negotiation_messages\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quoteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"finalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deliveryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentTerms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trackingInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"request\",\"kind\":\"object\",\"type\":\"ProcurementRequest\",\"relationName\":\"OrderToProcurementRequest\"},{\"name\":\"quote\",\"kind\":\"object\",\"type\":\"Quote\",\"relationName\":\"OrderToQuote\"},{\"name\":\"buyer\",\"kind\":\"object\",\"type\":\"Buyer\",\"relationName\":\"BuyerToOrder\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"OrderToVendor\"}],\"dbName\":\"orders\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

